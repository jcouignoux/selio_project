# Generated by Django 3.2.5 on 2021-07-09 16:18

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Nom')),
                ('forname', models.CharField(max_length=50, unique=True, verbose_name='Prénom')),
            ],
            options={
                'verbose_name': 'auteur',
            },
        ),
        migrations.CreateModel(
            name='Categorie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Nom')),
            ],
            options={
                'verbose_name': 'catégorie',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('forname', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=100)),
                ('adresse', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Nom')),
                ('marge', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Prix')),
            ],
            options={
                'verbose_name': 'éditeur',
            },
        ),
        migrations.CreateModel(
            name='Ouvrage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reference', models.IntegerField(null=True, verbose_name='Référence')),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('publication', models.IntegerField(verbose_name='Parution')),
                ('price', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Prix')),
                ('stock', models.IntegerField(verbose_name='Parution')),
                ('picture', models.FilePathField()),
                ('note', models.CharField(max_length=1000, verbose_name='Note')),
                ('available', models.BooleanField(default=True, verbose_name='Disponible')),
                ('auteurs', models.ManyToManyField(blank=True, related_name='ouvrages', to='store.Author')),
                ('categories', models.ManyToManyField(blank=True, related_name='ouvrages', to='store.Categorie')),
                ('editeurs', models.ManyToManyField(blank=True, related_name='ouvrages', to='store.Publisher')),
            ],
            options={
                'verbose_name': 'ouvrage',
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('contacted', models.BooleanField(default=False)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.contact')),
                ('ouvrages', models.ManyToManyField(to='store.Ouvrage')),
            ],
            options={
                'verbose_name': 'réservation',
            },
        ),
    ]
